{%  extends '::base.html.twig' %}

{%  block body %}

    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <div class="row">
                <div class="col-sm-6">
                    <h2>Defining an email</h2>
                </div>
                <div class="col-sm-6 right">
                    <a href="{{ path('homepage') }}" class="btn btn-default nav-btn">Go back</a>
                </div>
            </div>

            <div id ="form-place">
            <form>
                <div class="form-group">
                    <label>Sender:</label>
                    <input type="text" class="form-control" name="sender" placeholder="email address" required>
                </div>
                <div class="form-group">
                    <label>Recipients</label>

                    <div id="recipients-place"></div>
                    <button id="add-recipient" type="button" class="btn btn-success">Add recipient</button>
                </div>
                <div class="form-group">
                    <label>Title:</label>
                    <input type="text" class="form-control" name="title" placeholder="email title" required>
                </div>
                <div class="form-group">
                    <label for="content">Content</label>
                    <textarea class="form-control ignore" name="content" id="content"></textarea>
                </div>

                <div class="form-group">
                    <label>Priority</label>
                    <select name="priority" class="form-control">
                        <option value="1">Low</option>
                        <option value="2">Medium</option>
                        <option value="3">High</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Status</label>
                    <select name="status" class="form-control">
                        <option value="pending">Pending</option>
                        <option value="sent">Sent</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="file" class="btn btn-success">Add attachment
                    </label>
                    <input type="file" name="file" id="file" style="display: none;">
                </div>

                <div class="form-group">
                    <label>Attachment</label>
                    <div id="attachments-place"></div>
                </div>

                <div class="form-group">
                    <div id="message-place"></div>

                    <button type="button" class="btn btn-default" id="submit-email-add">Create email</button>
                </div>
            </form>
            </div>


        </div>
    </div>

{%  endblock %}

{% block javascripts %}

    <link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

    <script>
        var $messagePlace = $('#message-place');
        var attachments = [];

        $('#content').summernote({
            height:200,
            airMode: false,
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['misc', ['undo','redo']],
                ['font', ['strikethrough']],
                ['para', ['ul', 'ol']],
                ['misc', ['fullscreen']]
            ]
        });

        $(document).on('click','#submit-email-add', createEmail);
        $(document).on('click', '.remove-recipient', removeRecipientBox);
        $(document).on('click', '.remove-attachment', removeAttachmentFromThelist);

        $('[name="file"]').on('change', handleAttachmentUpload);
        $('#add-recipient').on('click', addRecipientBox);

        function addRecipientBox() {
            var temp = $('#recipient-temp').html();
            $('#recipients-place').append(temp);

            return false;
        }

        function removeRecipientBox() {
            var $this = $(this);
            $this.closest('.recipient-box').remove();
        }

        function createEmail() {
            var $this = $(this);
            var form = $this.closest('form');
            var url = '{{ path('api_post_mail') }}';
            var recipients = [];
            var recipientBoxes = $('[name="recipients[]"]');

            for (var i = 0; i < recipientBoxes.length; i++) {
                recipients.push($(recipientBoxes[i]).val());
            }

            var data = {
                title: form.find('[name="title"]').val(),
                sender: form.find('[name="sender"]').val(),
                content: form.find('[name="content"]').val(),
                priority: form.find('[name="priority"] option:selected').val(),
                status: form.find('[name="status"] option:selected').val(),
                attachments: attachments,
                recipients: recipients
            };

            $.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    $('#form-place').html(createSuccessMessage('Email created with id ' + data.id));
                    saveAcceptedAttachments();
                },
                error: function(data) {
                    $messagePlace.html(createErrorMessage(getApiErrorMessage(data)));
                }
            });

            return false;
        }

        function handleAttachmentUpload() {
            var $fileInput = $('#file');
            var attachmentsPlace = $('#attachments-place');
            var formData = new FormData();
            var file = $fileInput[0].files[0];

            $messagePlace.html('');

            if (false === checkIsAttachmentFileValid(file)) {
                return false;
            }

            var attachmentId = file.size + '-' + file.name;

            if (false === checkIsAttachmentUnique(attachmentId)) {
                return false;
            }

            var temp = _.template($('#attachment-temp').html());

            attachmentsPlace.append(temp({attachmentId:attachmentId, filename: file.name}));

            formData.append('file', file, file.name);

            $.ajax({
                url: '{{ path("api_post_attachment_cache") }}',
                type: 'POST',
                data: formData,
                dataType: 'json',
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    $('.attachment-file[data-id="'+attachmentId+'"]').addClass('btn-success');
                    $('.remove-attachment[data-id="'+attachmentId+'"]').attr('disabled', false);

                    var attachment = {
                        name: file.name,
                        cacheName: data.fileCacheName,
                        id: attachmentId
                    };

                    attachments.push(attachment);
                },
                error: function(data) {
                    $messagePlace.html(createErrorMessage(getApiErrorMessage(data)));
                }
            });

            $fileInput.val(null);

            return false;
        }

        function removeAttachmentFromThelist() {
            var $this= $(this);
            var attachmentId = $this.attr('data-id');

            var selectedAttachment = ($.grep(attachments, function(e) {
                return e.id === attachmentId;
            }))[0];

            attachments = $.grep(attachments, function(e) {
                return e.id !== attachmentId;
            });

            $.ajax({
                url: '{{ path("api_delete_attachment_cache") }}',
                data: {fileCacheName: selectedAttachment.cacheName},
                type: 'DELETE',
                success: function(data) {
                    $('.attachment-file[data-id="'+attachmentId+'"]').closest('.attachment-box').remove();
                    $('.remove-attachment[data-id="'+attachmentId+'"]').attr('disabled', false);
                    $('#file').val(null);
                },
                error: function(data) {
                    $messagePlace.html(createErrorMessage(getApiErrorMessage(data)));
                }
            });

            return false;
        }

        function saveAcceptedAttachments() {
            $.ajax({
                url: '{{ path("api_put_attachment") }}',
                type: 'PUT',
                data: {attachments: attachments}
            });

            return false;
        }

        function createErrorMessage(message) {
            return '<p class="alert alert-danger">' + message + '</p>'
        }

        function createSuccessMessage(message) {
            return '<p class="alert alert-success">' + message + '</p>'
        }

        function getApiErrorMessage(data) {
            if (data.responseJSON.message) {
                return data.responseJSON.message;
            }

            if (data.responseJSON && data.responseJSON.error && data.responseJSON.error.exception) {
                return data.responseJSON.error.exception[0].message;
            }
        }

        function checkIsAttachmentFileValid(file) {
            if (file.size >= 10000000 ) {
                $messagePlace
                    .html(createErrorMessage('This file is larger than 10MB. Sorry, it cannot be uploaded.'));
                return false;
            }

            return true;
        }

        function checkIsAttachmentUnique(attachmentId) {
            var selectedAttachment = ($.grep(attachments, function(e) {
                return e.id === attachmentId;
            }))[0];

            if (selectedAttachment) {
                $messagePlace
                    .html(createErrorMessage('Cannot add the same attachment twice.'));
                return false;
            }

            return true;
        }

    </script>

    <script type="text/html" id="recipient-temp">
        <div class="recipient-box row form-group">
            <div class="col-sm-11">
                <input type="text" class="form-control" name="recipients[]" placeholder="email address" required>
            </div>
            <div class="col-sm-1">
                <button class="btn btn-danger remove-recipient" type="button">X</button>
            </div>
        </div>
    </script>

    <script type="text/html" id="attachment-temp">
        <div class="attachment-box row form-group">
            <div class="col-sm-3">
                <div data-id="<%=attachmentId%>" class="btn btn-default attachment-file" style="width:100%;"><%=filename%></div>
            </div>
            <div class="col-sm-1">
                <button data-id="<%=attachmentId%>" type="button" class="btn btn-danger remove-attachment" disabled>Remove</button>
            </div>
        </div>
    </script>
{% endblock %}
